name: Wives Release
on:
  release:
    types:
      - published

jobs:
  publish_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get latest tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      # Replace Version in files
      # sed -i "s/%{{SPOTUBE_VERSION}}%/${{ steps.tag.outputs.tag }}/" choco-struct/tools/VERIFICATION.txt
      # sed -i "s/%{{SPOTUBE_VERSION}}%/${{ steps.tag.outputs.tag }}/" choco-struct/spotube.nuspec
      - run: |
          choco install sed make -y
          sed -i "s/%{{SPOTUBE_VERSION}}%/${{ steps.tag.outputs.tag }}/" windows/runner/Runner.rc

      # Build Windows Executable
      - uses: subosito/flutter-action@v2.8.0
        with:
          cache: true
      - run: |
          flutter config --enable-windows-desktop
          flutter pub get
          dart pub global activate flutter_distributor
          make innoinstall
          flutter_distributor package --platform=windows --targets=exe --skip-clean

      # Create Chocolatey Package
      # setting the sha256 hash for new bundle
      - run: |
          mv dist/**/wives-*-windows-setup.exe dist/Wives-windows-x86_64-setup.exe
      #     Set-Variable -Name HASH -Value (Get-FileHash dist\Wives-windows-x86_64-setup.exe).Hash
      #     sed -i "s/%{{WIN_SHA256}}%/$HASH/" choco-struct/tools/VERIFICATION.txt
      #     make choco

      # - run: mv dist/spotube.*.nupkg dist/Wives-windows-x86_64.nupkg

      # Publish to Chocolatey Repository
      # - run: |
      #     choco apikey -k ${{ secrets.CHOCO_API_KEY }} -s https://push.chocolatey.org/
      #     choco push dist/Wives-windows-x86_64.nupkg
      #     echo 'published to community.chocolatey.org'

      # Upload artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: Wives-Windows-Bundle
          path: dist/

  publish_macos:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Get latest tag
        uses: dawidd6/action-get-tag@v1
        id: tag
        with:
          strip_v: true
      - uses: subosito/flutter-action@v2.8.0
        with:
          cache: true
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter pub global activate melos
      - run: git clone https://github.com/krtirtho/flutter_distributor.git
      - run: cd flutter_distributor && melos bootstrap && cd ..
      - run: npm install -g appdmg
      - run: dart flutter_distributor/packages/flutter_distributor/bin/main.dart package --flutter-build-args=no-tree-shake-icons --platform macos --targets dmg --skip-clean
      - run: mv dist/**/wives-*-macos.dmg dist/Wives-macos-universal.dmg
      - uses: actions/upload-artifact@v2
        with:
          name: Wives-Macos-Bundle
          path: |
            dist/Wives-macos-universal.dmg

  publish_linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Get latest tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - uses: subosito/flutter-action@v2.8.0
        with:
          cache: true
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y tar clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - run: |
          wget -O appimage-builder https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.0-beta.1/appimage-builder-1.0.0-677acbd-x86_64.AppImage
          chmod +x appimage-builder
          mv appimage-builder /usr/local/bin/
      # replacing & adding new release version with older version
      # - run: |
      #     sed -i 's|%{{APPDATA_RELEASE}}%|<release version="${{ steps.tag.outputs.tag }}" date="${{ steps.date.outputs.date }}" />|' linux/com.github.KRTirtho.Spotube.appdata.xml

      - run: |
          flutter config --enable-linux-desktop
          flutter pub get
          dart pub global activate flutter_distributor
          flutter_distributor package --platform=linux --targets=deb,appimage --skip-clean
          make tar
      - run: |
          mv build/Wives-linux-x86_64.tar.xz dist/
          mv dist/**/wives-*-linux.deb dist/Wives-linux-x86_64.deb
          mv dist/**/wives-*-linux.AppImage dist/Wives-linux-x86_64.AppImage
      - uses: actions/upload-artifact@v3
        with:
          name: Wives-Linux-Bundle
          path: dist/

  update_release:
    needs:
      - publish_windows
      - publish_macos
      - publish_linux
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Wives-Windows-Bundle
          path: ./Wives-Windows-Bundle
      - uses: actions/download-artifact@v3
        with:
          name: Wives-Macos-Bundle
          path: ./Wives-Macos-Bundle
      - uses: actions/download-artifact@v3
        with:
          name: Wives-Linux-Bundle
          path: ./Wives-Linux-Bundle
      - name: Get latest tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - run: sudo apt-get install tree -y
      # generating checksums for all the binary
      - run: |
          tree .
          md5sum ./Wives-Windows-Bundle/*.exe >> RELEASE.md5sum
          md5sum ./Wives-Macos-Bundle/*.dmg >> RELEASE.md5sum
          md5sum ./Wives-Linux-Bundle/*.{AppImage,tar.xz,deb} >> RELEASE.md5sum
          sha256sum ./Wives-Macos-Bundle/*.dmg >> RELEASE.sha256sum
          sha256sum ./Wives-Windows-Bundle/*.exe >> RELEASE.sha256sum
          sha256sum ./Wives-Linux-Bundle/*.{AppImage,tar.xz,deb} >> RELEASE.sha256sum
          sed -i 's|Wives-.*-Bundle/||' RELEASE.sha256sum RELEASE.md5sum
      # Upload release binary
      - uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.tag.outputs.tag }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          allowUpdates: true
          artifacts: Wives-Windows-Bundle/*,Wives-Macos-Bundle/*,Wives-Linux-Bundle/*,RELEASE.sha256sum,RELEASE.md5sum

  # publish_winget:
  #   needs: update_release
  #   runs-on: windows-latest # action can only be run on windows
  #   steps:
  #     - uses: vedantmgoyal2009/winget-releaser@v1
  #       with:
  #         identifier: KRTirtho.Spotube
  #         token: ${{ secrets.WINGET_TOKEN }}

  # publish_flathub:
  #   needs: update_release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         repository: flathub/com.github.KRTirtho.Spotube
  #         token: ${{ secrets.FLATHUB_TOKEN }}
  #     - uses: actions/checkout@v3
  #       with:
  #         path: spotube
  #     - name: Get latest tag
  #       id: tag
  #       uses: dawidd6/action-get-tag@v1
  #       with:
  #         strip_v: true
  #     - run: |
  #         python3 spotube/scripts/update_flathub_version.py ${{ steps.tag.outputs.tag }}
  #         rm -rf spotube
  #         git add .
  #         git commit -m "v${{ steps.tag.outputs.tag }} Update"
  #         git branch update-${{ steps.tag.outputs.tag }}
  #         git switch update-${{ steps.tag.outputs.tag }}
  #         git push -u origin update-${{ steps.tag.outputs.tag }}

  # publish_aur:
  #   needs: update_release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Get latest tag
  #       id: tag
  #       uses: dawidd6/action-get-tag@v1
  #       with:
  #         strip_v: true
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: Wives-Linux-Bundle
  #         path: ./Wives-Linux-Bundle
  #     - run: |
  #         sed -i "s/%{{SPOTUBE_VERSION}}%/${{ steps.tag.outputs.tag }}/" aur-struct/PKGBUILD
  #         sed -i "s/%{{PKGREL}}%/1/" aur-struct/PKGBUILD
  #         sed -i "s/%{{LINUX_MD5}}%/`md5sum Wives-Linux-Bundle/Wives-linux-x86_64.tar.xz | awk '{print $1}'`/" aur-struct/PKGBUILD
  #     - uses: KSXGitHub/github-actions-deploy-aur@v2.6.0
  #       with:
  #         pkgname: spotube-bin
  #         pkgbuild: aur-struct/PKGBUILD
  #         commit_username: ${{ secrets.AUR_USERNAME }}
  #         commit_email: ${{ secrets.AUR_EMAIL }}
  #         ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
  #         commit_message: Updated to v${{ steps.tag.outputs.tag }}
